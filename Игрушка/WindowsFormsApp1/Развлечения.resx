<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>